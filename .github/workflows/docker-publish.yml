name: Zad2 - Docker Image Build/Push

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: Build, Scan and Push Image

    env:
      IMAGE_NAME: ghcr.io/msajmon/weather-app
      CACHE_IMAGE: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/zad2-cache:latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository

      - uses: docker/setup-buildx-action@v3
        name: Set up Docker Buildx

      - name: Install Docker Scout
        run: >
          curl -sSfL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh |
          sh -s -- -b /usr/local/bin

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image for scanning
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          platforms: linux/amd64
          tags: ${{ env.IMAGE_NAME }}:temp
          cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
          cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max

      - name: Scan with Docker Scout
        run: |
          docker-scout cves ${{ env.IMAGE_NAME }}:temp --format sarif --output cve-results.sarif
          COUNT=$(docker-scout cves ${{ env.IMAGE_NAME }}:temp --format json | grep -E '"severity":"(high|critical)"' | wc -l)
          echo "High/Critical vulnerabilities found: $COUNT"
          test "$COUNT" -eq 0

      - name: Push image to GHCR
        if: ${{ success() }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: >-
            ${{ env.IMAGE_NAME }}:latest,
            ${{ env.IMAGE_NAME }}:${{ github.sha }},
            ${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
          cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max
