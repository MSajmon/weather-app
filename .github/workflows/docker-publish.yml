name: Build and Push Multi-Arch Docker Image

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  CACHE_IMAGE: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/zadanie2-cache:cache

jobs:
  build-and-scan:
    name: Build, Scan and Push Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}  

    - name: Login to DockerHub (for cache)
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build multi-arch image with cache
      id: build
      uses: docker/build-push-action@v5
      with:
        push: false
        tags: ${{ env.IMAGE_NAME }}:latest
        platforms: linux/amd64,linux/arm64
        cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
        cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max
        outputs: type=docker

    - name: Scan image with Trivy
      uses: aquasecurity/trivy-action@0.11.2
      with:
        image-ref: ${{ env.IMAGE_NAME }}:latest
        format: table
        exit-code: 1
        severity: CRITICAL,HIGH

    - name: Push multi-arch image if scan passed
      if: success()
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ env.IMAGE_NAME }}:latest
        platforms: linux/amd64,linux/arm64
        cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
        cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max
